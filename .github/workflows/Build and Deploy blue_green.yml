# build
# deploy to Azure as App service using blue/green

name: Build_Test_Deploy_Blue/Green
env:
  AZURE_WEBAPP_NAME: myBPcalcualator            # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: 'publish'              # set this to the path to your web app project
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

on:
  workflow_dispatch:
  #push:
  # branches: [ master ]
  #pull_request:
  #  branches: [ master ] 

permissions:
  id-token: write
  contents: read
  checks: write
  actions: read
  
jobs:
  Build_and_Test:                                            # "build" job
    runs-on: ubuntu-latest                                   # runner
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Build for Release
      run: dotnet build --configuration Release
    - name: Run unit tests
      run: dotnet test BP_UnitTest/BP_UnitTest.csproj --no-restore --collect "Code coverage" -l:trx   
    - name: Publish Unit Test Results
      uses: dorny/test-reporter@v1
      with:
        artifact: ''
        name: MS Tests                  
        path: '**.trx'
        reporter: 'dotnet-trx'                  
    # run Specflow+ tests
    - name: Run Acceptance Tests 
      run: dotnet test BDDtesting/BDDtesting.csproj  --verbosity normal -l:trx
    - name: Run Sonar Test 
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      with:
        projectBaseDir: 
        args: >
          -Dsonar.organization=bogo80
          -Dsonar.projectKey=Bogo80_CA1Asigment
          -Dsonar.python.coverage.reportPaths=coverage.xml
  
  deploy_test_blue_green:                                             
    name: deploy to staging slot, run E2E tests, swap slots
    needs: Build_and_Test
    environment:
      name: staging
      url: htps://mybpcalcualator-staging.azurewebsites.net                                 
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    # publish web app ready for deployment
    - name: Publish web app
      run: dotnet publish -c Release -o ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp
    
    # Deploy to Azure app service to staging slot using publish profile for staging slot
    - name: Run Azure webapp deploy action using publish profile credentials
      uses: azure/webapps-deploy@v2
      with: 
        app-name: ${{ env.AZURE_WEBAPP_NAME }}                            
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE  }}     # Define secret variable in environment
        slot-name: staging
        package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp'

    # Run Selenium tests
    #- name: Run Selenium tests
    # run: dotnet test ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp/SeleniumTest.dll /Settings:SeleniumTest.runsettings --logger:"trx;LogFileName=selenium.trx"
  
    # Upload results of selenium tests
    #- uses: actions/upload-artifact@v3
    # with:
    #    name: Selenium Tests Results
    #   path: TestResults/selenium.trx
    # login to Azure account
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}                         # JSON objects which represents service principal

    # blue/green
    - name: swap staging and production slots
      run: 
        az webapp deployment slot swap -n gc-bmicalculator-ga -g gcresourcegroup1 --slot staging --target-slot production 

 # swap slots  
 #az webapp deployment slot swap -n gc-bmicalculator-ga -g gcresourcegroup1 --slot staging --target-slot production

 # or canary, 10% to staging, remainder to production, behind production URI
 #az webapp traffic-routing set --distribution staging=10 --name gc-bmicalculator-ga --resource-group gcresourcegroup1

